basePath: /v1
definitions:
  pb.CreateProductRequest:
    properties:
      name:
        type: string
      price:
        type: integer
      stock:
        type: integer
    type: object
  pb.CreateProductResponse:
    properties:
      error:
        type: string
      id:
        type: integer
      status:
        type: integer
    type: object
  pb.FindOneData:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
      sku:
        type: string
      stock:
        type: integer
    type: object
  pb.FindOneRequest:
    properties:
      id:
        type: integer
    type: object
  pb.FindOneResponse:
    properties:
      data:
        $ref: '#/definitions/pb.FindOneData'
      error:
        type: string
      status:
        type: integer
    type: object
  pb.ListProductData:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
      stock:
        type: integer
    type: object
  pb.ListProductResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/pb.ListProductData'
        type: array
      error:
        type: string
      status:
        type: integer
      total_pages:
        type: integer
    type: object
  routes.CreateOrderRequestBody:
    properties:
      productId:
        type: integer
      quantity:
        type: integer
    type: object
  routes.LoginRequestBody:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  routes.RegisterRequestBody:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a go grpc project.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Go GRPC Project
  version: "1.0"
paths:
  /auth/login:
    post:
      operationId: login
      parameters:
      - description: The body to create a thing
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/routes.LoginRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.LoginRequestBody'
      summary: login
  /auth/register:
    post:
      operationId: register
      parameters:
      - description: The body to create a thing
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/routes.RegisterRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.RegisterRequestBody'
      summary: Register
  /order:
    post:
      operationId: CreateOrder
      parameters:
      - description: The body to create a thing
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/routes.CreateOrderRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.CreateOrderRequestBody'
      security:
      - ApiKeyAuth: []
      summary: CreateOrder
  /product:
    post:
      operationId: CreateProduct
      parameters:
      - description: The body to create a thing
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/pb.CreateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.CreateProductResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateProduct
  /product/:id:
    get:
      operationId: FindProduct
      parameters:
      - description: The body to create a thing
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/pb.FindOneRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.FindOneResponse'
      security:
      - ApiKeyAuth: []
      summary: FindProduct
  /product/list:
    get:
      operationId: ListProduct
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ListProductResponse'
      security:
      - ApiKeyAuth: []
      summary: ListProduct
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
